do

  local function run(msg, matches)
    if msg.to.type == 'user'  then return end

    local chat_id, user_id  = msg.to.id,msg.from.id
    local phash = 'pin' .. chat_id
    local pin_id = redis:get(phash)

    if matches[2] then
      if pin_id then --try to edit the old message
        td.editMessageText(chat_id, pin_id, nil, matches[2], 1, 'HTML', function(a, d)
          if d.ID == "Error" then
            local text = _("The old message generated with `!pin` does not exist anymore, so I can't edit it. This is the new message that can be now pinned")
			reply_msg(msg.id, a.msg_id, ok_cb, true)
			reply_msg(msg.id, a.message, ok_cb, true)
          else
			reply_msg(pin_id, _("Message edited. Check it here."), ok_cb, true)
          end
        end, {msg_id = msg.id_, message = matches[2]})
      else
        local text = _('*No message has been pinned for group. Reply these message with* `!pin` to pin it.')
		td.sendText(tonumber(msg.to.id), 0, 1, 0, nil, matches[2], 0, 'html', nil, cmd)	
		td.sendText(tonumber(msg.to.id), msg.id, 1, 0, nil, text, 0, 'md', ok_cb, cmd)
      end
    else
      if msg.reply_id then
          td.pinChannelMessage(chat_id, msg.reply_id, 0)
        redis:set(phash, msg.reply_id)
        local text = _('This message is now pinned. Use `!pin [new text]` to edit it without having to send it again')
		reply_msg(msg.reply_id, text, ok_cb, true)
      else
        if pin_id then
          if matches[1] == 'unpin' then
            redis:del(phash)
            td.unpinChannelMessage(chat_id)
            td.deleteMessages(chat_id, {[0] = pin_id})
            return  _('Pinned message has been unpinned.')
          else
            td.getMessage(chat_id, pin_id, function(a, d)
              if d.ID == "Error" then
                local text = _("The pinned message does not exist anymore.")
                reply_msg(msg.id, text, ok_cb, true)
              else
                local text = _('Last message generated by `!pin` ðŸ‘†')
                 reply_msg(msg.id, text, ok_cb, true)
              end
            end, {chat_id = chat_id, msg_id = msg.id, pin_id = pin_id})
          end
        else
          local text = _('No message has been pinned for group. Reply a message with `!pin` to pin it.')
          reply_msg(msg.id, text, ok_cb, true)
        end
      end
    end
  end


  return {
    description = 'Pin a message.',
    usage = {
        '`!pin`',
        'Pin a replied message.',
        '',
        '`!pin [text]`',
        'Edit an existing pinned message if exist.',
        '',
        '`!pin`',
        'Show the pinned message.',
        '',
      },
    
    patterns = {
       '^(pin)$',
       '^(pin) (.*)$',
       '^(unpin)$',
    },
    run = run
  }

end
